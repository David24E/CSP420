{"version":3,"sources":["routes/CreateRoom.js","components/userCommsSection/usersList/usersList.jsx","components/userCommsSection/textChatComms/message.jsx","components/userCommsSection/textChatComms/textChatComms.jsx","components/userCommsSection/videoChatComms/videoChatComms.jsx","routes/Room.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","minHeight","display","alignItems","justifyContent","card","maxWidth","width","textFieldVSpacing","marginTop","roomCommsConfigurations","roomTypeConfigurations","url","process","URL","CreateRoom","props","classes","useState","roomName","setRoomName","roomType","setRoomType","roomComms","setRoomComms","handleTextFieldChange","e","target","value","name","console","log","className","Card","CardHeader","title","Divider","noValidate","autoComplete","onSubmit","preventDefault","roomID","uuid","createRoomState","fetch","method","headers","body","JSON","stringify","then","result","text","history","push","CardContent","TextField","fullWidth","onChange","label","helperText","autoFocus","required","select","map","MenuItem","CardActions","Button","variant","color","type","disabled","UsersList","useEffect","usersInRoom","dir","startIcon","disableElevation","List","users","ListItem","ListItemText","primary","nickname","ListItemSecondaryAction","IconButton","edge","aria-label","id","message","backgroundColor","margin","padding","borderRadius","myMessage","Message","messageStyle","messageType","class","align","Grid","container","item","xs","secondary","Fragment","Typography","component","messageUser","messageTime","children","chatFormContainer","position","bottom","top","chatForm","textField","messageArea","height","overflowY","TextChatComms","messages","index","yourID","sendMessage","placeholder","handleChange","vidWrapper","flexWrap","marginLeft","vidContainer","flex","styledVideo","overlayContainer","overlay","left","zIndex","opacity","topText","aligSelf","Video","ref","useRef","peer","on","stream","current","srcObject","playsInline","autoPlay","muted","VideoChatComms","userVideoRef","navigator","mediaDevices","getUserMedia","video","audio","peers","length","peerNickname","peerID","drawerWidth","theme","appBar","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","spacing","marginRight","paper","boxShadow","shadows","palette","background","modalButton","right","getModalStyle","transform","TabPanel","other","role","hidden","aria-labelledby","Box","p","Room","React","modalStyle","socketRef","peersRef","youtubePlayer","match","params","setPeers","setYourID","yourUser","setYourUser","setMessage","videoID","setVideoID","setMessages","currentTab","setCurrentTab","setUsersInRoom","yourNickname","setYourNickname","roomConfig","setRoomConfig","nicknameFieldError","setNicknameFieldError","isMainReady","setIsMainReady","response","json","data","io","autoConnect","forEach","user","userToSignal","callerID","callerNickname","Peer","initiator","trickle","signal","emit","handleData","createPeer","payload","incomingSignal","addPeer","peerObj","find","alert","sort","a","b","some","idx","unshift","splice","currentUser","tempPeer","receivedMessage","destroy","filter","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","window","onYouTubeIframeAPIReady","loadVideoPlayer","oldMsgs","player","YT","Player","parsed","parse","loadVideoById","split","pauseVideo","playVideo","CssBaseline","AppBar","Toolbar","noWrap","onClick","send","Drawer","anchor","Tabs","newValue","indicatorColor","textColor","Tab","messageObject","style","yourUserState","connect","error","appRoot","flexDirection","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72dcb25d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, CardHeader, CardActions, CardContent, Button, TextField, Divider, MenuItem } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v1 as uuid } from \"uuid\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: '100%',\n        minHeight: '100vh',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    card: {\n        minWidth: 275,\n        maxWidth: 345,\n    },\n\n    maxWidth: {\n        width: '100%',\n    },\n\n    textFieldVSpacing: {\n        marginTop: 22,\n    }\n});\n\nconst roomCommsConfigurations = ['Text Chat', 'Video Chat'];\nconst roomTypeConfigurations = ['Watch Together', 'Broadcast'];\nconst url = process.env.URL || 'http://localhost:8000';\n\nconst CreateRoom = (props) => {\n    const classes = useStyles();\n\n    const [roomName, setRoomName] = useState('');\n    const [roomType, setRoomType] = useState(`${roomTypeConfigurations[0]}`)\n    const [roomComms, setRoomComms] = useState(`${roomCommsConfigurations[0]}`)\n\n    const handleCreateRoomSubmission = (e) => {\n        e.preventDefault();\n\n        const roomID = uuid();\n        const createRoomState = { roomID, roomName, roomType, roomComms };\n\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(createRoomState)\n        })\n        .then((result) => console.log(result.text()))\n        .then(() => {props.history.push(`/room/${roomID}`)});\n    }\n\n    const handleTextFieldChange = (e) => {\n        const { value, name } = e.target;\n        if (name === 'roomName') {\n            console.log('value' + value)\n            setRoomName(value);\n        } else if (name === 'roomComms') {\n            console.log('value and name ' + value + ' ' + name);\n            setRoomComms(value);\n        } else if (name === 'roomType') {\n            console.log('value and name ' + value + ' ' + name);\n            setRoomType(value);\n        }\n    }\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Card className={classes.card}>\n                    <CardHeader title='CoVideo' />\n                    <Divider />\n                    <form noValidate autoComplete=\"off\" onSubmit={handleCreateRoomSubmission} >\n                        <CardContent>\n                            <TextField name=\"roomName\" fullWidth value={roomName} className={classes.textFieldVSpacing} onChange={handleTextFieldChange} label=\"Room Name\" helperText=\"Name the Room\" autoFocus required />\n                            <TextField name=\"roomComms\" select fullWidth value={roomComms} className={classes.textFieldVSpacing} onChange={handleTextFieldChange} label=\"Room Comms\" helperText=\"Choose the Preferred Communication Mode\">\n                                {roomCommsConfigurations.map(roomComms => (\n                                    <MenuItem key={roomComms} value={roomComms}>{roomComms}</MenuItem>\n                                ))}\n                            </TextField>\n                            <TextField name=\"roomType\" select fullWidth value={roomType} className={classes.textFieldVSpacing} onChange={handleTextFieldChange} label=\"Room Type\" helperText=\"Choose the Required Room Configuration\">\n                                {roomTypeConfigurations.map(roomType => (\n                                    <MenuItem key={roomType} value={roomType}>{roomType}</MenuItem>\n                                ))}\n                            </TextField>\n                        </CardContent>\n                        <CardActions>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.maxWidth} type=\"submit\" disabled={!roomName}>Create room</Button>\n                        </CardActions>\n                    </form>\n                </Card>\n            </div>\n\n        </>\n    );\n};\n\nexport default CreateRoom;","import React, { useEffect } from \"react\";\nimport { Button, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from \"@material-ui/core\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport GroupAdd from '@material-ui/icons/GroupAdd';\n\nconst UsersList = (props) => {\n\n    useEffect(() => {\n        // props.usersInRoom.map((users) => {\n            console.log('userinroom ', props.usersInRoom);\n            console.dir(props.usersInRoom);\n        // }\n    }, []);\n\n    return (\n        <>\n            <div>\n                <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    startIcon={<GroupAdd />}\n                    disableElevation\n                    fullWidth\n                >\n                    Add People\n                </Button>\n            </div>\n\n            <List>\n                {props.usersInRoom.map((users) => (\n                    <ListItem key={users.id}>\n                        <ListItemText primary={users.nickname}/>\n                        {/* <ListItemIcon>{<MoreVertIcon />}</ListItemIcon> */}\n                        <ListItemSecondaryAction>\n                            <IconButton edge=\"end\" aria-label=\"delete\">\n                                <MoreVertIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                ))}\n            </List>\n        </>\n    );\n};\n\nexport default UsersList;","import React from \"react\";\nimport { Grid, ListItemText, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    message: {\n        backgroundColor: '#aab6fe',\n        margin: '4px 0px',\n        padding: '0px 5px',\n        borderRadius: '5px',\n        width: '100%'\n    },\n    myMessage: {\n        backgroundColor: '#d1d9ff',\n        margin: '4px 0px',\n        padding: '0px 5px',\n        borderRadius: '5px',\n        width: '100%'\n    }\n});\n\nconst Message = (props) => {\n    const classes = useStyles();\n    let messageStyle = {};\n\n    if (props.messageType === 'mine') {\n        messageStyle.class = classes.message;\n        messageStyle.align = 'right';\n    } else if (props.messageType === 'otherUser') {\n        messageStyle.class = classes.myMessage;\n        messageStyle.align = 'left';\n    }\n\n    return (\n        <>\n            <div className={messageStyle.class}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <ListItemText align={messageStyle.align} secondary={\n                            <React.Fragment>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    color=\"primary\"\n                                >\n                                    {props.messageUser}\n                                </Typography>\n                                {` | ${props.messageTime}`}\n                            </React.Fragment>\n                        }></ListItemText>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <ListItemText align={messageStyle.align}>{props.children}</ListItemText>\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n};\n\nexport default Message;","import React from \"react\";\nimport { List, ListItem, IconButton, Divider, TextField } from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Message from \"./message\";\n\nconst useStyles = makeStyles({\n    chatFormContainer: {\n        position: 'absolute',\n        margin: '8px 0px',\n        width: '89%',\n        bottom: '0px',\n        top: 'auto'\n    },\n    chatForm: {\n        marginTop: '8px',\n    },\n    textField: {\n        width: '87%'\n    },\n    messageArea: {\n        height: '70vh',\n        overflowY: 'auto'\n    },\n    message: {\n        padding: '0px',\n        margin: '0px'\n    },\n});\n\nconst TextChatComms = (props) => {\n    const classes = useStyles();\n\n    return (\n        <>\n            <List className={classes.messageArea}>\n                {props.messages.map((message, index) => {\n                    if (message.id === props.yourID) {\n                        return (\n                            <ListItem key={index} className={classes.message}>\n                                <Message messageType='mine' messageUser={message.nickname} messageTime='09:30'>\n                                    {message.body}\n                                </Message>\n                            </ListItem>\n                        )\n                    }\n                    return (\n                        <ListItem key={index} className={classes.message}>\n                            <Message messageType='otherUser' messageUser={message.nickname} messageTime='09:31'>\n                                {message.body}\n                            </Message>\n                        </ListItem>\n                    )\n                })}\n            </List>\n\n            <div className={classes.chatFormContainer}>\n                <Divider />\n                <form id=\"chat-form\" className={classes.chatForm} onSubmit={props.sendMessage} noValidate autoComplete=\"off\">\n                    <TextField id=\"msg\" placeholder=\"Enter Message\" className={classes.textField} value={props.message} onChange={props.handleChange} required />\n                    <IconButton id=\"iconBtn\" type='submit' color=\"primary\" aria-label=\"send Message\" disabled={!props.message}>\n                        <SendIcon />\n                    </IconButton>\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default TextChatComms;","import React, { useEffect, useRef, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    vidWrapper: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginLeft: -0,\n        marginTop: -0,\n    },\n    vidContainer: {\n        flex: '1 0 calc(50% - 0px)',\n    },\n    styledVideo: {\n        width: '100%',\n        height: '100%',\n    },\n    overlayContainer: {\n        position: 'relative',\n    },\n    overlay: {\n        left: 0,\n        bottom: 8,\n        zIndex: 1,\n        opacity: 0.5,\n        position: 'absolute',\n        backgroundColor: 'black',\n    },\n    topText: {\n        margin: 1,\n        color: 'white',\n        aligSelf: 'center',\n    }\n});\n\nconst Video = (props) => {\n    const classes = useStyles();\n    const ref = useRef();\n\n    useEffect(() => {\n        if (props.peer) {\n            props.peer.on(\"stream\", stream => {\n                ref.current.srcObject = stream;\n            })\n        }\n    }, []);\n\n    return (\n        <div className={classes.vidContainer}>\n            <video className={classes.styledVideo} playsInline autoPlay muted ref={ref} />\n            <div className={classes.overlayContainer}>\n                <div className={classes.overlay}>\n                    <p className={classes.topText}>{props.nickname}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nconst VideoChatComms = (props) => {\n    const classes = useStyles();\n    const userVideoRef = useRef();\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n            if (userVideoRef.current) {\n                userVideoRef.current.srcObject = stream;\n            }\n        })\n    }, []);\n\n    return (\n        <div className={classes.vidWrapper}>\n            <div className={classes.vidContainer}>\n                <video className={classes.styledVideo} playsInline autoPlay muted ref={userVideoRef} />\n                <div className={classes.overlayContainer}>\n                    <div className={classes.overlay}>\n                        <p className={classes.topText}>You</p>\n                    </div>\n                </div>\n            </div>\n            {props.peers.length > 0 ? props.peers.map((peer) => { return (<Video key={peer.peerID} peer={peer.peer} nickname={peer.peerNickname} />)}) : ''}\n        </div>\n    );\n};\n\nexport default VideoChatComms;","import React, { useEffect, useState, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport PropTypes from 'prop-types';\nimport Peer from \"simple-peer\";\nimport { AppBar, Box, Button, Card, CardActions, CardContent, CardHeader, CssBaseline, Divider, Drawer, Modal, Tab, Tabs, TextField, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport UsersList from \"../components/userCommsSection/usersList/usersList\";\nimport TextChatComms from \"../components/userCommsSection/textChatComms/textChatComms\";\nimport VideoChatComms from \"../components/userCommsSection/videoChatComms/videoChatComms\";\n\nconst drawerWidth = 425;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: '100%',\n        minHeight: '100vh',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    content: {\n        flexGrow: 1,\n        height: '100%',\n        padding: theme.spacing(3),\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginRight: drawerWidth,\n    },\n    paper: {\n        width: 400,\n        position: 'absolute',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        backgroundColor: theme.palette.background.paper,\n    },\n    modalButton: {\n        right: -310,\n        marginTop: 22\n    },\n}));\n\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst TabPanel = (props) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={2}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst Room = (props) => {\n    const classes = useStyles();\n    const [modalStyle] = React.useState(getModalStyle);\n\n    const socketRef = useRef();\n    const peersRef = useRef([]);\n    const youtubePlayer = useRef();\n    const userVideoRef = useRef();\n\n    const roomID = props.match.params.roomID;\n\n    const [peers, setPeers] = useState([]);\n    const [yourID, setYourID] = useState('');\n    const [yourUser, setYourUser] = useState();\n    const [message, setMessage] = useState('');\n    const [videoID, setVideoID] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [currentTab, setCurrentTab] = useState(0);\n    const [usersInRoom, setUsersInRoom] = useState([]);\n    const [yourNickname, setYourNickname] = useState('');\n    const [roomConfig, setRoomConfig] = useState({ roomName: `${roomID}`, roomComms: 'Text Chat', roomType: 'Watch Together' });\n    const [nicknameFieldError, setNicknameFieldError] = useState(false);\n    const [isMainReady, setIsMainReady] = useState(false);\n\n\n    useEffect(() => {\n        fetch(`/room/${roomID}`).then((response) => {\n            return response.json();\n        }).then((data) => {\n            // this.setState({items: data.items});\n            console.log('data' + data);\n            console.dir(data);\n            setRoomConfig(data);\n        });\n        /* .catch((err) => {\n            throw new Error(err);\n        }); */\n    }, [roomID]);\n\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n            // socketRef.current = io.connect(\"/\");\n            socketRef.current = io({ autoConnect: false });\n\n            if (userVideoRef.current) {\n                userVideoRef.current.srcObject = stream;\n            }\n\n            socketRef.current.on(\"all users\", users => {\n                const peers = [];\n                users.forEach(user => {\n                    const peer = createPeer(user.id, socketRef.current.id, socketRef.current.nickname, stream);\n                    peersRef.current.push({\n                        peerID: user.id,\n                        peerNickname: user.nickname,\n                        peer,\n                    })\n                    peers.push({\n                        peerID: user.id,\n                        peerNickname: user.nickname,\n                        peer\n                    });\n                })\n\n                setPeers(peers);\n            })\n\n            socketRef.current.on(\"user joined\", payload => {\n                const peer = addPeer(payload.signal, payload.callerID, stream);\n                // remove?\n                // peer.signal(payload.signal);\n                peersRef.current.push({\n                    peerID: payload.callerID,\n                    peerNickname: payload.callerNickname,\n                    peer,\n                })\n\n                const peerObj = {\n                    peerID: payload.callerID,\n                    peerNickname: payload.callerNickname,\n                    peer,\n                }\n\n                setPeers(users => [...users, peerObj]);\n            });\n\n            socketRef.current.on(\"receiving returned signal\", payload => {\n                const item = peersRef.current.find(p => p.peerID === payload.id);\n                item.peer.signal(payload.signal);\n            });\n\n            socketRef.current.on(\"room full\", () => {\n                alert(\"room is full\");\n            })\n\n            socketRef.current.on('your id', id => {\n                setYourID(id);\n            })\n\n            socketRef.current.on('all users in room', users => {\n                users.sort((a, b) => { return b.nickname - a.nickname });\n\n                users.some((user, idx) =>\n                    user.id === socketRef.current.id &&\n                    users.unshift(\n                        users.splice(idx, 1)[0]\n                    )\n                )\n\n                const currentUser = users.find(user => user.id === socketRef.current.id);\n                if (currentUser) {\n                    currentUser.nickname = `${currentUser.nickname}(You)`;\n                }\n\n                console.log('all users in room start users ');\n                console.dir(usersInRoom);\n                console.log('all users in room start PeersRef ');\n                console.dir(peersRef);\n\n                if (peersRef.current.length > 0) {\n                    for (const user of users) {\n                        const tempPeer = peersRef.current.find((peer) => !peer.peerNickname && (peer.peerID === user.id));\n                        if (tempPeer) {\n                            tempPeer.peerNickname = user.nickname;\n                        }\n                    }\n                }\n\n                console.log('all users in room end users ');\n                console.dir(users);\n                console.log('all users in room end PeersRef ');\n                console.dir(peersRef);\n\n                setUsersInRoom(users);\n            })\n\n            socketRef.current.on(\"message\", (message) => {\n                receivedMessage(message);\n            })\n\n            socketRef.current.on('user left', id => {\n                const peerObj = peersRef.current.find(p => p.peerID === id);\n                console.log('user leaving... ');\n                console.dir(peerObj);\n\n                if (peerObj) {\n                    peerObj.peer.destroy();\n                }\n\n                const peers = peersRef.current.filter(p => p.peerID !== id);\n                peersRef.current = peers;\n\n                console.log('user left end PeersRef ');\n                console.dir(peersRef);\n                console.log('user left end Peers ');\n                console.dir(peers);\n\n                socketRef.current.emit(\"all users in room\");\n\n                setPeers(peers);\n            })\n\n        })\n    }, []);\n\n\n    useEffect(() => {\n        console.log('USE EFFECT LAUNCHED');\n        if (isMainReady) {\n            console.log('USE EFFECT LAUNCHED');\n            const tag = document.createElement('script');\n            tag.src = \"https://www.youtube.com/iframe_api\";\n            var firstScriptTag = document.getElementsByTagName('script')[0];\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n            window.onYouTubeIframeAPIReady = loadVideoPlayer;\n        }\n    }, [isMainReady]);\n\n    const receivedMessage = (message) => {\n        setMessages(oldMsgs => [...oldMsgs, message]);\n        console.log(\"receivedMessage \", messages);\n    }\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        const messageObject = {\n            body: message,\n            id: yourID,\n            nickname: yourNickname,\n        };\n        setMessage(\"\");\n        socketRef.current.emit(\"send message\", messageObject);\n    }\n\n    const handleChange = (e) => {\n        setMessage(e.target.value);\n    }\n\n\n    function handleTabChange(e, newValue) {\n        socketRef.current.on(\"all users\", users => {\n            users.forEach(user => {\n                peersRef.current = [...peersRef.current, { id: user.id, nickname: user.nickname }]\n            })\n        })\n\n        setCurrentTab(newValue)\n    }\n\n    function loadVideoPlayer() {\n        const player = new window.YT.Player('player', {\n            height: '390',\n            width: '640',\n        });\n\n        youtubePlayer.current = player;\n    }\n\n    function stopVideo() {\n        for (const peerRef of peersRef.current) {\n            peerRef.peer.send(JSON.stringify({ type: \"pause\" }));\n            youtubePlayer.current.pauseVideo();\n        }\n    }\n\n    function playVideo() {\n        for (const peerRef of peersRef.current) {\n            peerRef.peer.send(JSON.stringify({ type: \"play\" }));\n            youtubePlayer.current.playVideo();\n        }\n    }\n\n    function loadVideo() {\n        for (const peerRef of peersRef.current) {\n            peerRef.peer.send(JSON.stringify({ type: \"newVideo\", data: videoID }));\n            youtubePlayer.current.loadVideoById(videoID.split(\"=\")[1]);\n        }\n    }\n\n    function createPeer(userToSignal, callerID, callerNickname, stream) {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n        });\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, callerNickname, roomID, signal })\n        });\n\n        peer.on(\"data\", handleData);\n\n        return peer;\n    }\n\n    function addPeer(incomingSignal, callerID, stream) {\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n        })\n\n        peer.on(\"signal\", signal => {\n            socketRef.current.emit(\"returning signal\", { signal, callerID, roomID })\n        });\n\n        peer.on(\"data\", handleData);\n\n        peer.signal(incomingSignal);\n        return peer;\n    }\n\n    function handleStream(stream) {\n        console.log('handleStream called')\n        // partnerVideo.current.srcObject = stream;\n    }\n\n    function handleData(data) {\n        const parsed = JSON.parse(data);\n        if (parsed.type === \"newVideo\") {\n            youtubePlayer.current.loadVideoById(parsed.data.split(\"=\")[1]);\n        } else if (parsed.type === \"pause\") {\n            youtubePlayer.current.pauseVideo();\n        } else {\n            youtubePlayer.current.playVideo();\n        }\n    }\n\n    function handleModalSubmit(e) {\n        e.preventDefault();\n        const yourUserState = { id: yourID, nickname: yourNickname };\n\n        socketRef.current.connect();\n\n        socketRef.current.emit(\"join room\", { roomID, nickname: yourNickname }, (data) => {\n            if (data) {\n                navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n                    if (userVideoRef.current) {\n                        userVideoRef.current.srcObject = stream;\n                    }\n                })\n                setIsMainReady(true);\n                setYourUser(yourUserState);\n            } else {\n                setNicknameFieldError(true);\n            }\n        });\n    }\n\n    function handleModalTextFieldChange(e) {\n        const { value } = e.target;\n        setYourNickname(value);\n    }\n\n    return (\n        <>\n\n            {!yourUser ?\n                <Card style={modalStyle} className={classes.paper}>\n                    <CardHeader title='Please enter a username' />\n                    <Divider />\n                    <form noValidate autoComplete=\"off\" onSubmit={handleModalSubmit} >\n                        <CardContent>\n                            <TextField\n                                name=\"username\"\n                                fullWidth\n                                autoFocus\n                                value={yourNickname}\n                                error={nicknameFieldError}\n                                onChange={handleModalTextFieldChange}\n                                label=\"your username\"\n                                helperText={nicknameFieldError ? 'That username is not available. Please enter another' : ''}\n                                required\n                            />\n                        </CardContent>\n                        <CardActions>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.modalButton} type=\"submit\" disabled={!yourNickname}>Done</Button>\n                        </CardActions>\n                    </form>\n                </Card>\n\n                :\n\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AppBar position=\"fixed\" className={classes.appBar}>\n                        <Toolbar>\n                            <Typography variant=\"h6\" noWrap>\n                                CoVideo\n                        </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <main className={classes.content}>\n                        <Toolbar />\n\n                        <div id=\"player\" />\n                        <br/>\n                        <button onClick={stopVideo}>Stop Video</button>\n                        <button onClick={playVideo}>Play Video</button>\n                        <input type=\"text\" placeholder=\"video link\" value={videoID} onChange={e => setVideoID(e.target.value)} />\n                        <button onClick={loadVideo}>Load video</button>\n\n                    </main>\n                    <Drawer\n                        className={classes.drawer}\n                        variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        anchor='right'\n                    >\n                        <div className={classes.drawerContainer}>\n                            <Toolbar />\n                            <Tabs\n                                value={currentTab}\n                                onChange={handleTabChange}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"fullWidth\"\n                                aria-label=\"full width tabs example\"\n                            >\n                                <Tab label=\"Chat\" />\n                                <Tab label={`People (${usersInRoom.length})`} />\n                            </Tabs>\n\n                            <TabPanel value={currentTab} index={0}>\n                                {\n                                    roomConfig.roomComms === 'Text Chat' ?\n                                        <TextChatComms messages={messages} yourID={yourID} message={message} handleChange={handleChange} sendMessage={sendMessage} />\n                                        :\n                                        <VideoChatComms peers={(peersRef.current)} />\n                                }\n                            </TabPanel>\n                            <TabPanel value={currentTab} index={1}>\n                                <UsersList key={usersInRoom.length} usersInRoom={usersInRoom} />\n                            </TabPanel>\n\n                        </div>\n                    </Drawer>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default Room;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CreateRoom from './routes/CreateRoom';\nimport Room from \"./routes/Room\";\nimport './App.css';\n\nconst useStyles = makeStyles({\n  appRoot: {\n    display: 'flex',\n    justifyContent: 'center',\n    minHeight: '100vh',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.appRoot}>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={CreateRoom} />\n          <Route path=\"/room/:roomID\" component={Room} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}